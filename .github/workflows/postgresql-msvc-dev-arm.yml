name: Build PostgreSQL (MSVC Dev ARM64)

on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "00 04 * * *"
    
jobs:

  get-versions:
    uses: ./.github/workflows/manifest.yml
    with:
      config-path: manifest.json

  build-postgresql-msvc-dev:
    needs: get-versions
    strategy:
      fail-fast: false
    env:
      POSTGRESQL-DEV_VERSION: ${{needs.get-versions.outputs.POSTGRESQL-DEV_VERSION}}

    runs-on: windows-11-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: arm64
          toolset: 14.43
          vsversion: 2022
      
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgJsonGlob: '**/vcpkg.json'
          runVcpkgInstall: true

      - name: Checkout PostgreSQL
        uses: actions/checkout@v4
        with:
            repository: postgres/postgres
            path: postgresql-${{ env.POSTGRESQL-DEV_VERSION }}
            ref: ${{ env.POSTGRESQL-DEV_VERSION }}
    

      - name: Configure
        run: |
          cd postgresql-${{ env.POSTGRESQL-DEV_VERSION }}
          
          meson setup build `
            --prefix=C:\postgresql `
            --buildtype=debugoptimized `
            -Dlibxml=enabled `
            -Dlibicu=enabled `
            -Dlibedit=disabled `
            -Dlibxslt=enabled `
            -Dopenssl=enabled `
            -Dzlib=enabled `
            -Dlz4=enabled `
            -Dzstd=enabled `
            -Dextra_lib_dirs="${{ github.workspace }}\vcpkg\installed\arm64-windows\lib" `
            -Dextra_include_dirs="${{ github.workspace }}\vcpkg\installed\arm64-windows\include" `
            -Dpkg_config_path="${{ github.workspace }}\vcpkg\installed\arm64-windows\lib\pkgconfig"
          
      - name: Build
        run: |
          cd postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build
          ninja -j 1

      - name: Test
        run: |
          cd postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build
          meson test --timeout-multiplier 2

      - name: Upload Test Results
        if: ${{ !success() }}
        uses: actions/upload-artifact@v4
        with:
          name: test_logs
          path: |
            postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build\testrun\**\*.log
            postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build\testrun\**\regress_log_*
            postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build\testrun\**\*.diffs
            postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build\testrun\**\*.out
            postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build\meson-logs\testlog.txt

      - name: Install
        run: |
          cd postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build
          meson install --quiet

      - name: Create Source Archive
        run: |
          tar -czf postgresql-dev-${{ env.POSTGRESQL-DEV_VERSION }}.tar.gz postgresql-${{ env.POSTGRESQL-DEV_VERSION }}

      - name: Upload Source
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: postgresql-dev-${{ env.POSTGRESQL-DEV_VERSION }}-src
          path: postgresql-dev-${{ env.POSTGRESQL-DEV_VERSION }}.tar.gz

      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: postgresql-dev-${{ env.POSTGRESQL-DEV_VERSION }}-arm64
          path: C:\postgresql

      - name: Upload Meson Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: meson_log
          path: postgresql-${{ env.POSTGRESQL-DEV_VERSION }}\build\meson-logs\meson-log.txt
